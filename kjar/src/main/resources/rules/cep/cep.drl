package cep;

import com.ftn.sbnz.model.events.OtkucajSrcaEvent;
import com.ftn.sbnz.model.models.RadSrca;
import com.ftn.sbnz.model.models.AlarmEKG;
import java.util.List;
import java.lang.Math;
import java.util.Date;
import java.lang.Integer;

declare ProveraRRIntervala
    jmbgPacijenta: String
    razlikaIntervala: Double
end

global java.lang.Integer razlikaIntervalaGlobal;
global java.lang.Integer indexGlobal;

//rule "Ukoliko je broj otkucaja srca manji od 60/min, to ukazuje na bradikardiju."
//	when
//		$otkucaj1: OtkucajSrcaEvent($jmbgPacijenta1: jmbgPacijenta, rrInterval == null)
//		Number(intValue < 60) from accumulate(
//		    $otkucaj2: OtkucajSrcaEvent(
//		        this != $otkucaj1,
//		        jmbgPacijenta == $jmbgPacijenta1,
//		        rrInterval == null) over window: time(1m),
//		        //moze i this meets[1m] $otkucaj1
//		    count($otkucaj2)
//		)
//		String(this == "First Minute Passed")
//		not(AlarmEKG(jmbgPacijenta == $jmbgPacijenta1, radSrca == RadSrca.USPOREN))
//	then
//		System.out.println("Alarm - Pacijent ima usporen rad srca");
//		insert(new AlarmEKG($jmbgPacijenta1, RadSrca.USPOREN));
//end


//rule "Ukoliko je broj otkucaja srca veći od 100/min, to ukazuje na tahikardiju."
//	when
//		$otkucaj1: OtkucajSrcaEvent($jmbgPacijenta1: jmbgPacijenta, rrInterval == null)
//        Number(intValue > 100) from accumulate(
//                    $otkucaj2: OtkucajSrcaEvent(
//                        this != $otkucaj1,
//                        jmbgPacijenta == $jmbgPacijenta1,
//                        rrInterval == null) over window: time(1m),
//                    count($otkucaj2)
//        )
//        String(this == "First Minute Passed")
//		not(AlarmEKG(jmbgPacijenta == $jmbgPacijenta1, radSrca == RadSrca.UBRZAN))
//	then
//		System.out.println("Alarm - Pacijent ima ubrzan rad srca");
//		insert(new AlarmEKG($jmbgPacijenta1, RadSrca.UBRZAN));
//end


rule "Ako je razlika poslednjih 5 RR intervala veća od tri, sumnja se na atrijalnu fibrilaciju."
	when
		$otkucaj1: OtkucajSrcaEvent($jmbgPacijenta1: jmbgPacijenta, rrInterval != null)
		$posljednjih5: List(size >= 5) from collect(
                OtkucajSrcaEvent(jmbgPacijenta == $jmbgPacijenta1, rrInterval != null) over window:length(5)
            )
        $prviOtkucaj: OtkucajSrcaEvent(this == $posljednjih5.get(0))
        $drugiOtkucaj: OtkucajSrcaEvent(this == $posljednjih5.get(1))
        $treciOtkucaj: OtkucajSrcaEvent(this == $posljednjih5.get(2))
        $cetvrtiOtkucaj: OtkucajSrcaEvent(this == $posljednjih5.get(3))
        $petiOtkucaj: OtkucajSrcaEvent(this == $posljednjih5.get(4))
        eval(
            ($prviOtkucaj.getRrInterval() + $drugiOtkucaj.getRrInterval()
            + $treciOtkucaj.getRrInterval() + $cetvrtiOtkucaj.getRrInterval()
            + $petiOtkucaj.getRrInterval()
            )
            >= 4000
        )
        not(AlarmEKG(jmbgPacijenta == $jmbgPacijenta1, radSrca == RadSrca.ATRIJALNA_FIBRILACIJA))
	then
        insert(new AlarmEKG($jmbgPacijenta1, RadSrca.ATRIJALNA_FIBRILACIJA));
end

rule "Ukoliko postoji vise od tri P zupca za poslednji R zubac, sumnja se na atrijalnu fibrilaciju"
    when
        $rZubac: OtkucajSrcaEvent($jmbgPacijenta: jmbgPacijenta, $rZubacId: rZubac, rrInterval == null)
        Number(intValue >= 4) from accumulate(
        		    $pZubac: OtkucajSrcaEvent(
        		        this != $rZubac,
        		        jmbgPacijenta == $jmbgPacijenta,
        		        rZubac == $rZubacId,
        		        rrInterval == null),
        		    count($pZubac)
        		)
        not(AlarmEKG(jmbgPacijenta == $jmbgPacijenta, radSrca == RadSrca.ATRIJALNA_FIBRILACIJA))

    then
        insert(new AlarmEKG($jmbgPacijenta, RadSrca.ATRIJALNA_FIBRILACIJA));
end

rule "Ukoliko je odnos R zubaca i P zubaca 1:2 ili više, sumnja se na atrijalnu fibrilaciju"
    when
        $rZubacEvent: OtkucajSrcaEvent($jmbgPacijenta: jmbgPacijenta, $rZubacId: rZubac, rrInterval == null)
        String(this == "First Minute Passed")
        $brojRZubaca: Number() from accumulate(
                            $rZubac: OtkucajSrcaEvent(
                                this != $rZubacEvent,
                                jmbgPacijenta == $jmbgPacijenta,
                                rZubac != null,
                                rrInterval == null,
                                pZubac == null) over window: time(1m),
                            count($rZubac)
                        )
         $brojPZubaca: Number() from accumulate(
                            $pZubac: OtkucajSrcaEvent(
                                this != $rZubacEvent,
                                jmbgPacijenta == $jmbgPacijenta,
                                rZubac != null,
                                rrInterval == null,
                                pZubac != null) over window: time(1m),
                            count($pZubac)
                        )
        eval(($brojPZubaca.doubleValue() / $brojRZubaca.doubleValue()) >= 2.0)
        not(AlarmEKG(jmbgPacijenta == $jmbgPacijenta, radSrca == RadSrca.ATRIJALNA_FIBRILACIJA))
    then
        insert(new AlarmEKG($jmbgPacijenta, RadSrca.ATRIJALNA_FIBRILACIJA));
end


//
//rule "Ukoliko postoji pet otkucaja srca, izracunaj razliku RR intervala."
//	when
//		$otkucaj1: OtkucajSrcaEvent($jmbgPacijenta1: jmbgPacijenta, rrInterval != null)
//		$posljednjih5: List(size >= 5) from collect(
//                OtkucajSrcaEvent(jmbgPacijenta == $jmbgPacijenta1, rrInterval != null) over window:length(5)
//            )
//        not(AlarmEKG(jmbgPacijenta == $jmbgPacijenta1, radSrca == RadSrca.ATRIJALNA_FIBRILACIJA))
//	then
//		int razlikaIntervala = 0;
//		for(int i = 0; i < $posljednjih5.size() - 1; i++) {
//            OtkucajSrcaEvent otkucajSrca = (OtkucajSrcaEvent) $posljednjih5.get(i);
//            OtkucajSrcaEvent otkucajSrcaNext = (OtkucajSrcaEvent) $posljednjih5.get(i+1);
//            razlikaIntervala += Math.abs(otkucajSrca.getRrInterval() - otkucajSrcaNext.getRrInterval());
//		}
//		insert(new ProveraRRIntervala($jmbgPacijenta1, razlikaIntervala));
//end


//rule "Ukoliko je razlika poslednjih 5 RR intervala veca ili jednaka od 4 sekunde, sumnja se na atrijalnu fibrilaciju"
//	when
//		$razlika: ProveraRRIntervala(razlikaIntervala >= 4000, $jmbgPacijenta1: jmbgPacijenta)
//		not(AlarmEKG(jmbgPacijenta == $jmbgPacijenta1, radSrca == RadSrca.ATRIJALNA_FIBRILACIJA))
//	then
//		System.out.println("Alarm - Kod pacijenta se sumnja na atrijalnu fibrilaciju");
//		insert(new AlarmEKG($jmbgPacijenta1, RadSrca.ATRIJALNA_FIBRILACIJA));
//end
